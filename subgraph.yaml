specVersion: 0.0.2
description: Subgraph with support for the DVM data and synthetic tokens made with UMA, as well as supported identifiers, token holder balances and many more.
repository: https://github.com/UMAprotocol/uma-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Finder
    network: kovan
    source:
      address: "0xeD0169a88d267063184b0853BaAAAe66c3c154B2"
      abi: Finder
      startBlock: 23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - InterfaceImplementation
      abis:
        - name: Finder
          file: ./abis/Finder.json
      eventHandlers:
        - event: InterfaceImplementationChanged(indexed bytes32,indexed address)
          handler: handleInterfaceImplementationChanged
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleFinderOwnershipTransferred
  - kind: ethereum/contract
    name: VotingToken
    network: kovan
    source:
      address: "0x489Bf230d4Ab5c2083556E394a28276C22c3B580"
      abi: VotingToken
      startBlock: 23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - User
      abis:
        - name: VotingToken
          file: ./abis/VotingToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferVotingToken
  - kind: ethereum/contract
    name: IdentifierWhitelist
    network: kovan
    source:
      address: "0xeF9c374b7976941fCAf5e501eaB531E430463fC6"
      abi: IdentifierWhitelist
      startBlock: 23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - PriceIdentifier
      abis:
        - name: IdentifierWhitelist
          file: ./abis/IdentifierWhitelist.json
      eventHandlers:
        - event: SupportedIdentifierAdded(indexed bytes32)
          handler: handleSupportedIdentifierAdded
        - event: SupportedIdentifierRemoved(indexed bytes32)
          handler: handleSupportedIdentifierRemoved
  - kind: ethereum/contract
    name: Store
    network: kovan
    source:
      address: "0x41AF40Eb92Bec4dD8DA77103597838b3dBBD3B6f"
      abi: Store
      startBlock: 23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - Store
      abis:
        - name: Store
          file: ./abis/Store.json
      eventHandlers:
        # - event: NewFinalFee((uint256))
        #   handler: handleNewFinalFee
        - event: NewFixedOracleFeePerSecondPerPfc((uint256))
          handler: handleNewFixedOracleFeePerSecondPerPfc
        - event: NewWeeklyDelayFeePerSecondPerPfc((uint256))
          handler: handleNewWeeklyDelayFeePerSecondPerPfc
      callHandlers:
        - function: setFinalFee(address,tuple)
          handler: handleSetFinalFee
  - kind: ethereum/contract
    name: AddressWhitelist
    network: kovan
    source:
      address: "0xf8bdAb5d675F76eD863fF9Fa35B129A6e43e71cA"
      abi: AddressWhitelist
      startBlock: 23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - Store
        - Token
      abis:
        - name: AddressWhitelist
          file: ./abis/AddressWhitelist.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: AddedToWhitelist(indexed address)
          handler: handleAddedToWhitelist
        - event: RemovedFromWhitelist(indexed address)
          handler: handleRemovedFromWhitelist
  - kind: ethereum/contract
    name: Voting
    network: kovan
    source:
      address: "0x10E241725178991417E65fadE965Ca1F07852283"
      abi: Voting
      startBlock: 23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - CommittedVote
        - RevealedVote
        - PriceRequest
        - User
        - PriceIdentifier
        - Store
      abis:
        - name: Voting
          file: ./abis/Voting.json
        - name: VotingToken
          file: ./abis/VotingToken.json
      eventHandlers:
        - event: EncryptedVote(indexed address,indexed uint256,indexed bytes32,uint256,bytes)
          handler: handleEncryptedVote
        - event: PriceRequestAdded(indexed uint256,indexed bytes32,uint256)
          handler: handlePriceRequestAdded
        - event: PriceResolved(indexed uint256,indexed bytes32,uint256,int256)
          handler: handlePriceResolved
        - event: RewardsRetrieved(indexed address,indexed uint256,indexed bytes32,uint256,uint256)
          handler: handleRewardsRetrieved
        - event: VoteCommitted(indexed address,indexed uint256,indexed bytes32,uint256)
          handler: handleVoteCommitted
        - event: VoteRevealed(indexed address,indexed uint256,indexed bytes32,uint256,int256,uint256)
          handler: handleVoteRevealed
      callHandlers:
        - function: setGatPercentage(tuple)
          handler: handleSetGatPercentage
        - function: setInflationRate(tuple)
          handler: handleSetInflationRate
  - kind: ethereum/contract
    name: NewVoting
    network: kovan
    source:
      address: "0x03fe668862a0BFa9d3706A0ebA18007464343FdD"
      abi: Voting
      startBlock: 23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - CommittedVote
        - RevealedVote
        - PriceRequest
        - User
        - PriceIdentifier
        - Store
      abis:
        - name: Voting
          file: ./abis/Voting.json
        - name: VotingToken
          file: ./abis/VotingToken.json
      eventHandlers:
        - event: EncryptedVote(indexed address,indexed uint256,indexed bytes32,uint256,bytes)
          handler: handleEncryptedVote
        - event: PriceRequestAdded(indexed uint256,indexed bytes32,uint256)
          handler: handlePriceRequestAdded
        - event: PriceResolved(indexed uint256,indexed bytes32,uint256,int256)
          handler: handlePriceResolved
        - event: RewardsRetrieved(indexed address,indexed uint256,indexed bytes32,uint256,uint256)
          handler: handleRewardsRetrieved
        - event: VoteCommitted(indexed address,indexed uint256,indexed bytes32,uint256)
          handler: handleVoteCommitted
        - event: VoteRevealed(indexed address,indexed uint256,indexed bytes32,uint256,int256,uint256)
          handler: handleVoteRevealed
      callHandlers:
        - function: setGatPercentage(tuple)
          handler: handleSetGatPercentage
        - function: setInflationRate(tuple)
          handler: handleSetInflationRate
  - kind: ethereum/contract
    name: Registry
    network: kovan
    source:
      address: "0x7b1c04D2826B140779e2B97d5783AF05cf00Fbab"
      abi: Registry
      startBlock: 	23200000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
        - ContractCreator
        - User
      abis:
        - name: Registry
          file: ./abis/Registry.json
        - name: ExpiringMultiPartyCreator
          file: ./abis/ExpiringMultiPartyCreator.json
      eventHandlers:
        - event: NewContractRegistered(indexed address,indexed address,address[])
          handler: handleNewContractRegistered
        - event: AddedSharedMember(indexed uint256,indexed address,indexed address)
          handler: handleAddedSharedMember
        - event: RemovedSharedMember(indexed uint256,indexed address,indexed address)
          handler: handleRemovedSharedMember
  # - kind: ethereum/contract
  #   name: Governor
  #   network: kovan
  #   source:
  #     address: "0x592349f7dedb2b75f9d4f194d4b7c16d82e507dc"
  #     abi: Governor
  #     startBlock: 9937467
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     file: ./src/index.ts
  #     entities:
  #       - Proposal
  #       - PriceRequest
  #     abis:
  #       - name: Governor
  #         file: ./abis/Governor.json
  #     eventHandlers:
  #       - event: NewProposal(indexed uint256,tuple[])
  #         handler: handleNewProposal
  #       - event: ProposalExecuted(indexed uint256,uint256)
  #         handler: handleProposalExecuted
templates:
  - name: CollateralERC20
    kind: ethereum/contract
    network: kovan
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleCollateralTransfer
  - name: FeeERC20
    kind: ethereum/contract
    network: kovan
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - Store
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Store
          file: ./abis/Store.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleFeeTransfer
  - name: ExpiringMultiPartyCreator
    kind: ethereum/contract
    network: kovan
    source:
      abi: ExpiringMultiPartyCreator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - ContractCreator
        - FinancialContract
      abis:
        - name: ExpiringMultiPartyCreator
          file: ./abis/ExpiringMultiPartyCreator.json
        - name: ExpiringMultiParty
          file: ./abis/ExpiringMultiParty.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: CreatedExpiringMultiParty(indexed address,indexed address)
          handler: handleCreatedExpiringMultiParty
  - name: ExpiringMultiParty
    kind: ethereum/contract
    network: kovan
    source:
      abi: ExpiringMultiParty
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/index.ts
      entities:
        - FinancialContract
        - Store
      abis:
        - name: ExpiringMultiParty
          file: ./abis/ExpiringMultiParty.json
      eventHandlers:
        - event: FinalFeesPaid(indexed uint256)
          handler: handleFinalFeesPaid
        - event: RegularFeesPaid(indexed uint256,indexed uint256)
          handler: handleRegularFeesPaid
        - event: PositionCreated(indexed address,indexed uint256,indexed uint256)
          handler: handlePositionCreated
        - event: SettleExpiredPosition(indexed address,indexed uint256,indexed uint256)
          handler: handleSettleExpiredPosition
        - event: Redeem(indexed address,indexed uint256,indexed uint256)
          handler: handleRedeem
        - event: Deposit(indexed address,indexed uint256)
          handler: handleDeposit
        - event: Withdrawal(indexed address,indexed uint256)
          handler: handleWithdrawal
        - event: NewSponsor(indexed address)
          handler: handleNewSponsor
        - event: EndedSponsorPosition(indexed address)
          handler: handleEndedSponsorPosition
        - event: LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleLiquidationCreated
        - event: LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256,uint256)
          handler: handleLiquidationCreatedNew
        - event: LiquidationDisputed(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleLiquidationDisputed
        - event: DisputeSettled(indexed address,indexed address,indexed address,address,uint256,bool)
          handler: handleDisputeSettled
        - event: RequestTransferPosition(indexed address)
          handler: handleRequestTransferPosition
        - event: RequestTransferPositionCanceled(indexed address)
          handler: handleRequestTransferPositionCanceled
        - event: RequestTransferPositionExecuted(indexed address,indexed address)
          handler: handleRequestTransferPositionExecuted
        - event: RequestWithdrawal(indexed address,indexed uint256)
          handler: handleRequestWithdrawal
        - event: RequestWithdrawalCanceled(indexed address,indexed uint256)
          handler: handleRequestWithdrawalCanceled
        - event: RequestWithdrawalExecuted(indexed address,indexed uint256)
          handler: handleRequestWithdrawalExecuted
      callHandlers:
        - function: withdrawLiquidation(uint256,address)
          handler: handleLiquidationWithdrawn
  # - ContractExpired(indexed address)
  # + Deposit(indexed address,indexed uint256)
  # + DisputeSettled(indexed address,indexed address,indexed address,address,uint256,bool)
  # - EmergencyShutdown(indexed address,uint256,uint256)
  # + EndedSponsorPosition(indexed address)
  # + FinalFeesPaid(indexed uint256)
  # + LiquidationCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256)
  # + LiquidationDisputed(indexed address,indexed address,indexed address,uint256,uint256)
  # + LiquidationWithdrawn(indexed address,uint256,indexed uint8)
  # + NewSponsor(indexed address)
  # + PositionCreated(indexed address,indexed uint256,indexed uint256)
  # + Redeem(indexed address,indexed uint256,indexed uint256)
  # + RegularFeesPaid(indexed uint256,indexed uint256)
  # + RequestTransferPosition(indexed address)
  # + RequestTransferPositionCanceled(indexed address)
  # + RequestTransferPositionExecuted(indexed address,indexed address)
  # + RequestWithdrawal(indexed address,indexed uint256)
  # + RequestWithdrawalCanceled(indexed address,indexed uint256)
  # + RequestWithdrawalExecuted(indexed address,indexed uint256)
  # + SettleExpiredPosition(indexed address,indexed uint256,indexed uint256)
  # + Withdrawal(indexed address,indexed uint256)
